<?xml version="1.0" encoding="UTF-8"?>

<map:sitemap xmlns:map="http://apache.org/cocoon/sitemap/1.0">

  <!--

    kiln configuration sitemap.

    This sitemap defines defaults that are sensible across all
    projects, and provides pipelines for common functionality. The
    defaults can be overridden in the project-specific sitemap(s).

    The top-level project-specific sitemap, main.xmap, is mounted
    from here.

  -->

  <map:components>
    <map:transformers default="saxon">
      <map:transformer logger="sitemap.transformer.sesame" name="sesame"
        src="uk.ac.kcl.cch.xmod.cocoon.transformation.SesameTransformer" />

      <map:transformer logger="sitemap.transformer.solr" name="solr"
        src="uk.ac.kcl.cch.xmod.cocoon.transformation.SolrTransformer" />
    </map:transformers>

    <map:serializers default="html5">
      <map:serializer logger="sitemap.serializer.html" mime-type="text/html; charset=utf-8" name="html5"
        src="org.apache.cocoon.serialization.HTMLSerializer">
        <doctype-system>about:legacy-compat</doctype-system>
        <encoding>UTF-8</encoding>
      </map:serializer>

      <map:serializer logger="sitemap.serializer.xhtml" mime-type="application/xhtml+xml; charset=utf-8" name="xhtml5"
        pool-max="${xhtml-serializer.pool-max}" src="org.apache.cocoon.serialization.XMLSerializer">
        <encoding>UTF-8</encoding>
        <indent>yes</indent>
      </map:serializer>

      <map:serializer logger="sitemap.serializer.xml" mime-type="application/rdf+xml; charset=utf-8" name="rdf-xml"
        src="org.apache.cocoon.serialization.XMLSerializer">
        <encoding>UTF-8</encoding>
        <indent>yes</indent>
      </map:serializer>
    </map:serializers>
  </map:components>

  <map:pipelines>
    <map:component-configurations>
      <global-variables />
    </map:component-configurations>

    <!-- Menu pipeline. -->
    <map:pipeline id="kiln-menu" internal-only="true">
      <!-- Menu that must be localised. -->
      <map:match pattern="_internal/menu/*/*.xml">
        <!-- {1} is a language code. -->
        <map:generate src="../../assets/menu/{2}.xml" />
        <map:transform src="../stylesheets/menu/normalise-menu.xsl">
          <map:parameter name="language" value="{1}" />
          <map:parameter name="url" value="{request-param:url}" />
        </map:transform>
        <map:transform src="../stylesheets/menu/contextualise-menu.xsl">
          <map:parameter name="url" value="{request-param:url}" />
          <map:parameter name="language" value="{1}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>

      <!-- Menu without localisation. -->
      <map:match pattern="_internal/menu/*.xml">
        <map:generate src="../../assets/menu/{1}.xml" />
        <map:transform src="../stylesheets/menu/normalise-menu.xsl" />
        <map:transform src="../stylesheets/menu/contextualise-menu.xsl">
          <map:parameter name="url" value="{request-param:url}" />
        </map:transform>
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- EATS -->
    <map:pipeline id="kiln-eats" internal-only="true">
      <!-- Exports all the entities in EATSML. -->
      <map:match pattern="_internal/eats/entities.xml">
        <map:generate src="{global:eats-server}edit/export/eatsml/" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Exports all the entities that are associated with an
           authority (id) in EATSML. -->
      <map:match pattern="_internal/eats/*/entities.xml">
        <map:generate src="{global:eats-server}edit/export/eatsml/{1}/" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- Templating. -->
    <map:pipeline id="kiln-templating" internal-only="true">
      <!-- To read XSLTs referenced from the template files -->
      <map:match pattern="_internal/template/xsl/**.xsl">
        <map:generate src="../../{1}.xsl" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Transform an XML template into an XSLT, handling template
           inheritance. -->
      <map:match pattern="_internal/template/**.xsl">
        <map:generate src="../../assets/templates/{1}.xml" />
        <map:transform type="xinclude" />
        <map:transform src="../stylesheets/template/inherit-template.xsl" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <map:pipeline internal-only="true">
      <!-- Directory listing. -->
      <map:match pattern="_internal/dirlist/**.xml">
        <map:generate src="../../{1}" type="directory">
          <map:parameter name="depth" value="99" />
          <map:parameter name="exclude" value="^\.|~$" />
        </map:generate>
        <map:serialize type="xml" />
      </map:match>

      <!-- Reverse URL matching. -->
      <map:match pattern="_internal/url/reverse.xsl">
        <!-- Produces an XSLT that provides a "url-for-match" named
             template that generates a full URL from a map:match ID
             and a sequence of parameters. -->
        <map:generate src="cocoon://_internal/introspection/pipelines.xml" />
        <map:transform src="../stylesheets/url-reverse.xsl" />
        <map:serialize type="xml" />
      </map:match>

      <!-- Request parameters and headers. -->
      <map:match pattern="_internal/request.xml">
        <map:generate type="request" />
        <map:serialize type="xml" />
      </map:match>

      <!-- System status. -->
      <map:match pattern="_internal/system-status.xml">
        <map:generate type="status" />
        <map:serialize type="xml" />
      </map:match>
    </map:pipeline>

    <!-- Mount sub-sitemaps. -->
    <map:pipeline>
      <!-- Assets handling (not project specific). -->
      <map:match pattern="assets/**">
        <map:mount check-reload="yes" src="assets.xmap" uri-prefix="assets/" />
      </map:match>

      <!-- Fedora repository handling (not project specific). -->
      <map:match pattern="_internal/fedora/**">
        <map:mount check-reload="yes" src="fedora.xmap"
                   uri-prefix="_internal/fedora/" />
      </map:match>

      <!-- ODD handling (not project specific). -->
      <map:match pattern="_internal/odd/**">
        <map:mount check-reload="yes" src="odd.xmap" uri-prefix="_internal/odd/" />
      </map:match>

      <!-- Schematron handling (not project specific). -->
      <map:match pattern="_internal/schematron/**">
        <map:mount check-reload="yes" src="schematron.xmap" uri-prefix="_internal/schematron/" />
      </map:match>

      <!-- Sesame (RDF server) handling (not project specific). -->
      <map:match pattern="_internal/sesame/**">
        <map:mount check-reload="yes" src="sesame.xmap" uri-prefix="_internal/sesame/" />
      </map:match>

      <!-- Solr handling (not project specific). -->
      <map:match pattern="_internal/solr/**">
        <map:mount check-reload="yes" src="solr.xmap" uri-prefix="_internal/solr/" />
      </map:match>

      <map:match pattern="_internal/introspection/**">
        <map:mount check-reload="yes" src="introspection.xmap"
                   uri-prefix="_internal/introspection/" />
      </map:match>

      <!-- Main project sitemap, matching on the remaining URL
           space. -->
      <map:match pattern="**">
        <map:mount check-reload="yes" src="../../sitemaps/main.xmap" uri-prefix="" />
      </map:match>
    </map:pipeline>
  </map:pipelines>
</map:sitemap>
